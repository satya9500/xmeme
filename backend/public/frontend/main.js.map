{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/post.service.ts","./src/app/services/fetch.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/update.service.ts","./src/app/form/form.component.ts","./src/app/form/form.component.html","./src/app/services/delete.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backend: {\n    baseURL: \"http://localhost:8081\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  baseUrl: string = environment.backend.baseURL;\n\n  constructor(private http: HttpClient) { }\n  postMeme(data): any {\n    return this.http.post(`${this.baseUrl}/memes`, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FetchService {\n  baseUrl: string = environment.backend.baseURL;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getMemes(): any {\n    return this.http.get(`${this.baseUrl}/memes`);\n  }\n\n  getMeme(id): any {\n    return this.http.get(`${this.baseUrl}/memes/${id}`);\n  }\n}\n","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { FormComponent } from './form/form.component';\nimport { NbWindowService } from '@nebular/theme';\nimport { FetchService } from './services/fetch.service';\nimport { DeleteService } from './services/delete.service';\nimport { NbToastrService } from '@nebular/theme';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private windowService: NbWindowService, private fetch: FetchService, private remove: DeleteService, private toastrService: NbToastrService) {\n  }\n  allMemes = [];\n  loading = false;\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.fetch.getMemes().subscribe((res: any) => {\n      this.loading = false;\n      this.allMemes = res.memes;\n    })\n  }\n  addMeme() {\n    this.loading = true;\n    this.windowService.open(FormComponent, { title: `Add Meme to your Arsenal` }).onClose.subscribe((res: any) => {\n      this.loading = false;\n      this.ngOnInit();\n    })\n  }\n  deleteMeme(id: string) {\n    this.loading = true;\n    this.remove.deleteMeme(id).subscribe((res: any) => {\n      this.showToast('', 'Meme Deleted Successfully', { duration: 2000, destroyByClick: true, status: 'success' });\n      this.loading = false;\n      this.ngOnInit();\n    }, (err: any) => {\n      this.showToast('',\n        err.error.error,\n        { duration: 5000, destroyByClick: true, status: 'danger' });\n    })\n  }\n\n  editMeme(id: string) {\n    this.loading = true;\n    this.fetch.getMeme(id).subscribe((res: any) => {\n      this.loading = false;\n      this.windowService.open(FormComponent, { title: `Edit this published meme`, context: res.meme }).onClose.subscribe((res: any) => {\n        this.ngOnInit();\n      })\n    })\n  }\n\n  showToast(text, heading, options) {\n    this.toastrService.show(text, heading, options);\n  }\n}\n","<nb-layout responsive>\n  <nb-layout-header fixed class=\"row\" responsive>\n    <div class=\"col-6\">\n      <img src=\"assets/xmeme.png\" />\n    </div>\n    <div class=\"col-6\">\n      <button class=\"float-right\" (click)=\"addMeme()\" nbButton outline status=\"primary\">Publish A Meme</button>\n    </div>\n  </nb-layout-header>\n\n  <nb-layout-column responsive>\n    <div *ngIf=\"allMemes.length > 0\">\n      <div class=\"row\">\n        <nb-card *ngFor=\"let meme of allMemes\" class=\"col-md-4 col-sm-12\" [nbSpinner]=\"loading\">\n          <nb-card-header class=\"row\">\n            <div class=\"col-6\">\n              {{meme.caption}}\n            </div>\n            <div class=\"col-6\">\n              <button (click)=\"deleteMeme(meme._id)\" nbButton status=\"danger\" class=\"float-right\">\n                <nb-icon nbPrefix icon=\"trash-2-outline\" pack=\"eva\"></nb-icon>\n              </button>\n              <button (click)=\"editMeme(meme._id)\" nbButton status=\"warning\" class=\"float-right mr-3\">\n                <nb-icon nbPrefix icon=\"edit-2-outline\" pack=\"eva\"></nb-icon>\n              </button>\n            </div>\n          </nb-card-header>\n          <nb-card-body>\n            <img [src]=\"meme.url\" width=\"100%\" style=\"max-height: 350px;min-height: 350px;\" [alt]=\"meme.url\">\n          </nb-card-body>\n          <nb-card-footer>By {{meme.name}}</nb-card-footer>\n        </nb-card>\n      </div>\n    </div>\n    <div *ngIf=\"allMemes.length == 0\">\n      No memes found\n    </div>\n  </nb-layout-column>\n</nb-layout>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router'; // we also need angular router for Nebular to function properly\nimport { NbThemeModule, NbFormFieldModule } from '@nebular/theme';\nimport { NbSidebarModule, NbToastrModule, NbLayoutModule, NbButtonModule, NbCardModule, NbInputModule, NbWindowModule, NbIconModule } from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { FormComponent } from './form/form.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormComponent,\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    NbThemeModule.forRoot(),\n    RouterModule, // RouterModule.forRoot(routes, { useHash: true }), if this is your app.module\n    NbLayoutModule,\n    NbSidebarModule.forRoot(), // NbSidebarModule.forRoot(), //if this is your app.module\n    NbButtonModule,\n    NbEvaIconsModule,\n    NbCardModule,\n    NbInputModule,\n    NbWindowModule.forRoot(),\n    NbFormFieldModule,\n    NbIconModule,\n    HttpClientModule,\n    NbSidebarModule,\n    NbToastrModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  baseUrl: string = environment.backend.baseURL;\n\n  constructor(private http: HttpClient) { }\n  updateMeme(id, data) {\n    return this.http.put(`${this.baseUrl}/memes/${id}`, data)\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { PostService } from '../services/post.service';\nimport { UpdateService } from '../services/update.service';\nimport { NbWindowRef } from '@nebular/theme'\nimport { NbToastrService, NbComponentStatus } from '@nebular/theme';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\n\nexport class FormComponent implements OnInit {\n  @Input() text: any;\n  mode = \"add\";\n  id: string;\n  constructor(private formBuilder: FormBuilder, private post: PostService, private update: UpdateService, protected ref: NbWindowRef, private toastrService: NbToastrService) {\n    if (ref.config.context[\"_id\"]) {\n      this.mode = \"edit\";\n      this.id = ref.config.context[\"_id\"];\n      this.memeForm.patchValue({ name: ref.config.context[\"name\"] })\n      this.memeForm.controls[\"name\"].disable();\n      this.memeForm.patchValue({ url: ref.config.context[\"url\"] })\n      this.memeForm.patchValue({ caption: ref.config.context[\"caption\"] })\n    }\n  }\n\n  memeForm = this.formBuilder.group({\n    name: [null, [Validators.required, Validators.minLength(3)]],\n    url: [null, [Validators.required, Validators.minLength(3)]],\n    caption: [null],\n  });\n  loading = false;\n\n  ngOnInit(): void {\n\n  }\n  addMode() {\n    return this.mode == \"add\" ? true : false;\n  }\n\n  editMode() {\n    return this.mode == \"edit\" ? true : false;\n  }\n\n  onSubmit(): void {\n    if (this.memeForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    if (this.mode == \"add\") {\n      this.post.postMeme(this.memeForm.value).subscribe((res: any) => {\n        this.showToast('', 'Meme Added Successfully', { duration: 2000, destroyByClick: true, status: 'success' });\n        this.ref.close();\n      }, (err: any) => {\n        this.showToast('',\n          err.error.error,\n          { duration: 2000, destroyByClick: true, status: 'danger' });\n      })\n    } else if (this.mode == \"edit\") {\n      this.update.updateMeme(this.id, this.memeForm.value).subscribe((res: any) => {\n        this.showToast('', 'Meme Edited Successfully', { duration: 2000, destroyByClick: true, status: 'success' });\n        this.ref.close();\n      }, (err: any) => {\n        this.showToast('',\n          err.error.error,\n          { duration: 2000, destroyByClick: true, status: 'danger' });\n      })\n    }\n    this.loading = false;\n    this.memeForm.reset();\n  }\n\n  showToast(text, heading, options) {\n    this.toastrService.show(text, heading, options);\n  }\n\n}\n","<form [formGroup]=\"memeForm\" (ngSubmit)=\"onSubmit()\" class=\"col-md-12 col-sm-8\">\n  <nb-form-field class=\"mb-3\">\n    <nb-icon nbPrefix icon=\"at-outline\" pack=\"eva\"></nb-icon>\n    <input type=\"text\" formControlName=\"name\" type=\"text\" fieldSize=\"large\" fullWidth placeholder=\"Enter your name\"\n      nbInput required>\n  </nb-form-field>\n  <nb-form-field class=\"mb-3\">\n    <nb-icon nbPrefix icon=\"image-outline\" pack=\"eva\"></nb-icon>\n    <input type=\"text\" formControlName=\"url\" type=\"text\" fieldSize=\"large\" fullWidth placeholder=\"Enter image url\"\n      nbInput required>\n  </nb-form-field>\n  <nb-form-field class=\"mb-3\">\n    <textarea nbInput formControlName=\"caption\" fullWidth placeholder=\"Enter Caption here\" fieldSize=\"large\"></textarea>\n  </nb-form-field>\n  <button type=\"submit\" nbButton fullWidth status=\"primary\">Submit Meme</button>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeleteService {\n  baseUrl: string = environment.backend.baseURL;\n\n  constructor(private http: HttpClient) { }\n  deleteMeme(id: string) {\n    return this.http.delete(`${this.baseUrl}/memes/${id}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}